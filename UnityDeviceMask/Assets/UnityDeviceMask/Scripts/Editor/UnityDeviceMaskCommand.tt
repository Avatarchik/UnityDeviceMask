<#@ template language="C#" #>
<#@ output extension=".cs" #>  
<#@ assembly name="$(SolutionDir)\\Library\\ScriptAssemblies\\Assembly-CSharp.dll" #>  
<#@ import namespace="Tonari.Unity.UnityDeviceMask" #>  
using UnityEditor;

namespace Tonari.Unity.UnityDeviceMask
{
    internal static partial class UnityDeviceMaskCommand
    {
        private const string CommandParentHierarchy = "Tonari/UnityDeviceMask/";

<# 
foreach(UnityDeviceMaskType value in Enum.GetValues(typeof(UnityDeviceMaskType)))
{
 #>
        [MenuItem(CommandParentHierarchy + "<#= value.ToString() #>", isValidateFunction: false)]
        public static void Set<#= value.ToString() #>()
        {
            SetMaskTypeCore(UnityDeviceMaskType.<#= value.ToString() #>);
            UpdateMask();
        }
        
        [MenuItem(CommandParentHierarchy + "<#= value.ToString() #>", isValidateFunction: true)]
        private static bool IsSet<#= value.ToString() #>()
        {
            SetMaskTypeCore(UnityDeviceMaskSetting.UnityDeviceMaskType);
            return true;
        }

<# 
}
 #>
    }
}
